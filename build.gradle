plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.limhs'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	implementation 'org.hibernate:hibernate-core:6.6.29.Final'
	implementation 'org.hibernate:hibernate-jcache:6.6.29.Final'
	implementation 'javax.cache:cache-api:1.1.1'
	implementation 'org.ehcache:ehcache:3.10.9'

	// QueryDSL (Spring Boot 3 → Jakarta)
	//querydsl-jpa → JPA용 QueryDSL 핵심 라이브러리
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	// Annotation Processing Tool, 컴파일 시점에 Q 클래스(QMovie, QPost 등)를 생성
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

	// Jakarta dependencies
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// MySQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
//Q 클래스 생성 위치 설정
def querydslDir = file("src/main/generated")
tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = querydslDir //Q 클래스가 생성될 폴더 지정
}
sourceSets.main.java.srcDir querydslDir //Gradle에게 "생성된 Q 클래스도 컴파일 대상"이라고 알려줌

bootRun {
	dependsOn compileJava //Spring Boot 애플리케이션 실행 전에 Q 클래스가 생성되고 컴파일되도록 보장
}

// clean task 수정
clean {
	delete querydslDir ///gradlew clean 시 Q 클래스도 삭제되도록 설정
}
